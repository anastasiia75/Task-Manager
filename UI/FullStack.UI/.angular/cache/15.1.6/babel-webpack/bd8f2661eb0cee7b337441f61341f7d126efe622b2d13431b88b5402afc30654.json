{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"src/app/services/auth.service\";\nimport * as i4 from \"@angular/forms\";\nexport class EditTaskComponent {\n  constructor(route, userService, router, authService) {\n    this.route = route;\n    this.userService = userService;\n    this.router = router;\n    this.authService = authService;\n    this.task = {\n      id: '',\n      name: '',\n      description: ''\n    };\n    this.username = \"\";\n  }\n  ngOnInit() {\n    this.authService.getMe().subscribe(data => {\n      this.username = data;\n    });\n    this.route.paramMap.subscribe({\n      next: params => {\n        const id = params.get('taskid');\n        this.name = params.get('id');\n        if (this.name && id) {\n          this.userService.getTask(this.name, id).subscribe({\n            next: response => {\n              this.task = response;\n            }\n          });\n        }\n      }\n    });\n  }\n  updateTask() {\n    this.userService.updateTask(this.task, this.name, this.task.id).subscribe({\n      next: response => {\n        this.router.navigateByUrl('user-profile/' + this.username + '/tasks');\n      }\n    });\n  }\n  deleteTask() {\n    this.userService.deleteTask(this.task.id, this.name).subscribe({\n      next: response => {\n        this.router.navigateByUrl('user-profile/' + this.username + '/tasks');\n      }\n    });\n  }\n}\nEditTaskComponent.ɵfac = function EditTaskComponent_Factory(t) {\n  return new (t || EditTaskComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n};\nEditTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditTaskComponent,\n  selectors: [[\"app-edit-task\"]],\n  decls: 33,\n  vars: 5,\n  consts: [[1, \"container\", \"my-5\"], [1, \"mb-3\"], [1, \"row\"], [1, \"col-6\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"for\", \"id\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"id\", \"readonly\", \"\", \"name\", \"id\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"salary\", 1, \"form-label\"], [\"type\", \"datetime-local\", \"id\", \"salary\", \"name\", \"salary\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"checkbox\", \"id\", \"department\", \"name\", \"department\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"department\", 1, \"form-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mr-5\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function EditTaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"edit-task works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"h1\", 1);\n      i0.ɵɵtext(4, \"Edit Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 3)(7, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function EditTaskComponent_Template_form_ngSubmit_7_listener() {\n        return ctx.updateTask();\n      });\n      i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function EditTaskComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.task.id = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 1)(14, \"label\", 8);\n      i0.ɵɵtext(15, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function EditTaskComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.task.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 1)(18, \"label\", 10);\n      i0.ɵɵtext(19, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function EditTaskComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.task.description = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 1)(22, \"label\", 12);\n      i0.ɵɵtext(23, \"Deadline\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function EditTaskComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.task.deadline = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 1)(26, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function EditTaskComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.task.isDone = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"label\", 15);\n      i0.ɵɵtext(28, \"Done\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"button\", 16);\n      i0.ɵɵtext(30, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function EditTaskComponent_Template_button_click_31_listener() {\n        return ctx.deleteTask();\n      });\n      i0.ɵɵtext(32, \"Delete\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngModel\", ctx.task.id);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.task.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.task.description);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.task.deadline);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.task.isDone);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.CheckboxControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["EditTaskComponent","constructor","route","userService","router","authService","id","name","description","ngOnInit","getMe","subscribe","data","username","paramMap","next","params","get","getTask","response","task","updateTask","navigateByUrl","deleteTask","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\programming\\pet project\\TaskManager\\UI\\FullStack.UI\\src\\app\\components\\tasks\\edit-task\\edit-task.component.ts","C:\\Users\\User\\Desktop\\programming\\pet project\\TaskManager\\UI\\FullStack.UI\\src\\app\\components\\tasks\\edit-task\\edit-task.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Task } from 'src/app/models/task';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-task',\r\n  templateUrl: './edit-task.component.html',\r\n  styleUrls: ['./edit-task.component.css']\r\n})\r\nexport class EditTaskComponent implements OnInit{\r\n  task: Task = {\r\n    id: '',\r\n    name: '',\r\n    description: ''\r\n  };\r\n  username = \"\";\r\n  \r\n  name!: string | null;\r\n  constructor(private route: ActivatedRoute, private userService: UserService,\r\n    private router: Router, private authService: AuthService){\r\n      \r\n    }\r\n    \r\n  ngOnInit(): void {\r\n    \r\n    this.authService.getMe().\r\n        subscribe(data => {\r\n         this.username = data;\r\n       });\r\n\r\n    this.route.paramMap.subscribe({\r\n      next: (params) => {\r\n        const id = params.get('taskid');\r\n        this.name = params.get('id');\r\n        if (this.name && id){\r\n          this.userService.getTask(this.name,id)\r\n          .subscribe({\r\n            next: (response) => {\r\n              this.task = response;\r\n            }\r\n          })\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  updateTask()\r\n  {\r\n    \r\n    this.userService.updateTask(this.task, this.name, this.task.id)\r\n    .subscribe({\r\n      next: (response) => {\r\n        this.router.navigateByUrl('user-profile/'+ this.username+'/tasks');\r\n      }\r\n    });\r\n  \r\n  }\r\n  deleteTask()\r\n  {\r\n\r\n    this.userService.deleteTask(this.task.id, this.name)\r\n    .subscribe({\r\n      next: (response) =>{\r\n      this.router.navigateByUrl('user-profile/'+ this.username+'/tasks');\r\n    }\r\n    });\r\n  }\r\n\r\n}\r\n","<p>edit-task works!</p>\r\n<div class=\"container my-5\">\r\n    <h1 class = \"mb-3\">Edit Task</h1>\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">\r\n            <form #form = \"ngForm\" (ngSubmit)=\"updateTask()\">\r\n                <div class=\"mb-3\">\r\n                    <label for=\"id\" class=\"form-label\">Id</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"id\" readonly\r\n                    name = \"id\" [(ngModel)] = \"task.id\">\r\n                    </div>\r\n\r\n                <div class=\"mb-3\">\r\n                <label for=\"name\" class=\"form-label\">Name</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"name\" \r\n                name = \"name\" [(ngModel)] = \"task.name\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"email\" class=\"form-label\">Description</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"email\" \r\n                    name =\"email\" [(ngModel)] = \"task.description\">\r\n                </div>\r\n               \r\n                <div class=\"mb-3\">\r\n                    <label for=\"salary\" class=\"form-label\">Deadline</label>\r\n                    <input type=\"datetime-local\" class=\"form-control\" id=\"salary\" \r\n                    name=\"salary\" [(ngModel)] = \"task.deadline\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    \r\n                    <input type=\"checkbox\" class=\"form-check-input\" id=\"department\" \r\n                    name = \"department\" [(ngModel)] = \"task.isDone\">\r\n                    <label for=\"department\" class=\"form-label\">Done</label>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary mr-5\">Save</button>\r\n                <button type=\"button\" class=\"btn btn-danger\" \r\n                (click) = \"deleteTask()\">Delete</button>\r\n\r\n            </form>\r\n        </div>\r\n    </div>\r\n    \r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}