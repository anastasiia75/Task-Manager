{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = function () {\n  return [\"login\"];\n};\nconst _c1 = function (a0) {\n  return {\n    loginPopup: a0\n  };\n};\nconst _c2 = function (a0) {\n  return {\n    outlets: a0\n  };\n};\nconst _c3 = function (a0) {\n  return [a0];\n};\nconst _c4 = function () {\n  return [\"register\"];\n};\nconst _c5 = function (a0) {\n  return {\n    regPopup: a0\n  };\n};\nfunction AppComponent_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\", 16)(1, \"button\", 17);\n    i0.ɵɵtext(2, \"LogIn\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 18);\n    i0.ɵɵtext(4, \"Register\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(7, _c3, i0.ɵɵpureFunction1(5, _c2, i0.ɵɵpureFunction1(3, _c1, i0.ɵɵpureFunction0(2, _c0)))));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(14, _c3, i0.ɵɵpureFunction1(12, _c2, i0.ɵɵpureFunction1(10, _c5, i0.ɵɵpureFunction0(9, _c4)))));\n  }\n}\nfunction AppComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_5_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.LogOut());\n    });\n    i0.ɵɵtext(2, \"LogOut\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 20);\n    i0.ɵɵelement(4, \"span\", 21);\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c6 = function (a1) {\n  return [\"user-profile\", a1];\n};\nexport class AppComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.title = 'FullStack.UI';\n    this.name = '';\n    this.getme();\n  }\n  SignIn() {\n    return this.authService.IsLoggedIn();\n  }\n  LogOut() {\n    this.authService.Logout();\n  }\n  getme() {\n    this.authService.getMe().subscribe(data => {\n      this.name = data;\n      console.log(data); // This will log the actual data object to the console\n    });\n  }\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 20,\n  vars: 5,\n  consts: [[1, \"navbar\", \"navbar-fixed-top\", \"navbar-dark\", \"bg-dark\"], [1, \"container-fluid\", \"px-5\"], [1, \"navbar-brand\"], [\"class\", \"ms-auto\", 4, \"ngIf\"], [4, \"ngIf\"], [\"tabindex\", \"-1\", \"id\", \"offcanvasDarkNavbar\", \"aria-labelledby\", \"offcanvasDarkNavbarLabel\", 1, \"offcanvas\", \"offcanvas-end\", \"text-bg-dark\"], [1, \"offcanvas-header\"], [\"id\", \"offcanvasDarkNavbarLabel\", 1, \"offcanvas-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"offcanvas\", \"aria-label\", \"Close\", 1, \"btn-close\", \"btn-close-white\"], [1, \"offcanvas-body\"], [1, \"navbar-nav\", \"justify-content-end\", \"flex-grow-1\", \"pe-3\"], [1, \"nav-item\"], [\"aria-current\", \"page\", 1, \"nav-link\", \"active\", 3, \"routerLink\"], [\"name\", \"user-profile/:id\"], [\"name\", \"loginPopup\"], [\"name\", \"regPopup\"], [1, \"ms-auto\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#loginModal\", 1, \"btn\", \"btn-outline-success\", \"me-2\", 3, \"routerLink\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"aria-labelledby\", \"exampleModalLabel\", \"data-bs-target\", \"#regModal\", 1, \"btn\", \"btn-outline-success\", \"me-2\", 3, \"routerLink\"], [\"type\", \"button\", \"routerLink\", \"\", 1, \"btn\", \"btn-outline-success\", \"me-2\", 3, \"click\"], [\"type\", \"button\", \"data-bs-toggle\", \"offcanvas\", \"data-bs-target\", \"#offcanvasDarkNavbar\", \"aria-controls\", \"offcanvasDarkNavbar\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"a\", 2);\n      i0.ɵɵtext(3, \"Task Manager\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, AppComponent_form_4_Template, 5, 16, \"form\", 3);\n      i0.ɵɵtemplate(5, AppComponent_div_5_Template, 5, 0, \"div\", 4);\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"h5\", 7);\n      i0.ɵɵtext(9, \"MENU\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"button\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 9)(12, \"ul\", 10)(13, \"li\", 11)(14, \"a\", 12);\n      i0.ɵɵtext(15, \"Home\");\n      i0.ɵɵelementEnd()()()()()()();\n      i0.ɵɵelement(16, \"router-outlet\", 13)(17, \"router-outlet\", 14)(18, \"router-outlet\", 15)(19, \"router-outlet\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !ctx.SignIn());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.SignIn());\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c6, ctx.name));\n    }\n  },\n  dependencies: [i2.NgIf, i3.RouterOutlet, i3.RouterLink, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIMA,gCAA0C;IAEvCA,qBAAK;IAAAA,iBAAS;IACfA,kCACC;IAAAA,wBAAQ;IAAAA,iBAAS;;;IAH6FA,eAAsD;IAAtDA,2IAAsD;IAEpBA,eAAuD;IAAvDA,8IAAuD;;;;;;IAG1MA,2BAAyB;IACoCA;MAAAA;MAAA;MAAA,OAAWA,8BAAQ;IAAA,EAAC;IAC9EA,sBAAM;IAAAA,iBAAS;IAChBA,kCACkC;IAClCA,2BAAyC;IAC3CA,iBAAS;;;;;;ACRf,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAF/B,UAAK,GAAG,cAAc;IACtB,SAAI,GAAG,EAAE;IAEP,IAAI,CAACC,KAAK,EAAE;EACd;EAEAC,MAAM;IAGJ,OAAO,IAAI,CAACF,WAAW,CAACG,UAAU,EAAE;EACtC;EACAC,MAAM;IAEJ,IAAI,CAACJ,WAAW,CAACK,MAAM,EAAE;EAC3B;EACAJ,KAAK;IAEF,IAAI,CAACD,WAAW,CAACM,KAAK,EAAE,CACxBC,SAAS,CAACC,IAAI,IAAG;MAChB,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;EACJ;;;AAvBWV,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRzBnB,8BAAyD;MAE3BA,4BAAY;MAAAA,iBAAI;MAExCA,gEAKO;MACPA,6DAQM;MAENA,8BAAoI;MAEtEA,oBAAI;MAAAA,iBAAK;MACnEA,6BAAgH;MAClHA,iBAAM;MACNA,+BAA4B;MAG+DA,qBAAI;MAAAA,iBAAI;MAU3GA,qCAAwD;;;MAlC3CA,eAAe;MAAfA,oCAAe;MAMhBA,eAAgB;MAAhBA,mCAAgB;MAkBiCA,eAAqC;MAArCA,iEAAqC","names":["i0","AppComponent","constructor","authService","getme","SignIn","IsLoggedIn","LogOut","Logout","getMe","subscribe","data","name","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\programming\\pet project\\TaskManager\\UI\\FullStack.UI\\src\\app\\app.component.html","C:\\Users\\User\\Desktop\\programming\\pet project\\TaskManager\\UI\\FullStack.UI\\src\\app\\app.component.ts"],"sourcesContent":["<nav class=\"navbar navbar-fixed-top navbar-dark bg-dark\">\r\n    <div class=\"container-fluid px-5\">\r\n      <a class=\"navbar-brand\">Task Manager</a>\r\n\r\n      <form *ngIf=\"!SignIn()\" class = \"ms-auto\">\r\n        <button class=\"btn btn-outline-success me-2\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#loginModal\" [routerLink]=\"[{ outlets: { loginPopup: ['login'] }}]\"\r\n        >LogIn</button> \r\n        <button class=\"btn btn-outline-success me-2\" type=\"button\" data-bs-toggle=\"modal\" aria-labelledby=\"exampleModalLabel\" data-bs-target=\"#regModal\" [routerLink]=\"[{ outlets: { regPopup: ['register'] }}]\"\r\n        >Register</button>\r\n      </form>\r\n      <div *ngIf = \"SignIn()\" >\r\n        <button class=\"btn btn-outline-success me-2\" type=\"button\" (click) = \"LogOut()\"  routerLink = \"\"\r\n        >LogOut</button>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasDarkNavbar\" \r\n      aria-controls=\"offcanvasDarkNavbar\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      \r\n      </div>\r\n      \r\n      <div class=\"offcanvas offcanvas-end text-bg-dark\" tabindex=\"-1\" id=\"offcanvasDarkNavbar\" aria-labelledby=\"offcanvasDarkNavbarLabel\">\r\n        <div class=\"offcanvas-header\">\r\n          <h5 class=\"offcanvas-title\" id=\"offcanvasDarkNavbarLabel\">MENU</h5>\r\n          <button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"offcanvas-body\">\r\n          <ul class=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link active\" aria-current=\"page\" [routerLink]= \"['user-profile',name]\">Home</a>\r\n            </li>\r\n               \r\n          </ul>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n\r\n<router-outlet name= \"user-profile/:id\"></router-outlet> \r\n  <router-outlet name= \"loginPopup\"></router-outlet> \r\n  <router-outlet name= \"regPopup\"></router-outlet> \r\n<router-outlet></router-outlet>\r\n","import { Component,OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent{\r\n  title = 'FullStack.UI';\r\n  name = '';\r\n  constructor(private authService: AuthService) { \r\n    this.getme();\r\n  }  \r\n\r\n  SignIn ()\r\n  { \r\n    \r\n    return this.authService.IsLoggedIn(); \r\n  }\r\n  LogOut()\r\n  {\r\n    this.authService.Logout();\r\n  }\r\n  getme()\r\n  {\r\n     this.authService.getMe().\r\n     subscribe(data => {\r\n      this.name = data;\r\n      console.log(data); // This will log the actual data object to the console\r\n    });\r\n  }\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}