{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.TOKEN_KEY = 'access_token';\n    this.isUserLoggedIn = false;\n    this.headers = new HttpHeaders().set('Content-Type', 'application/json');\n    this.currentUser = {};\n  }\n  register(user) {\n    return this.http.post('https://localhost:7159/api/Auth/register(regPopup:register)', user, {\n      responseType: 'text'\n    });\n  }\n  login(user) {\n    return this.http.post('https://localhost:7159/api/Auth/login(loginPopup:login)', user, {\n      responseType: 'text'\n    });\n  }\n  Logout() {\n    localStorage.removeItem('token');\n  }\n  IsLoggedIn() {\n    return localStorage.getItem('token') !== null;\n  }\n  GetToken() {\n    return localStorage.getItem('token');\n  }\n  getMe() {\n    return this.http.get('https://localhost:7159/api/Auth/', {\n      responseType: 'text'\n    });\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAS9D,OAAM,MAAOC,WAAW;EAQtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAPP,cAAS,GAAG,cAAc;IAC3C,mBAAc,GAAY,KAAK;IAC/B,YAAO,GAAG,IAAIH,WAAW,EAAE,CAACI,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACnE,gBAAW,GAAG,EAAE;EAIwB;EAGjCC,QAAQ,CAACC,IAAU;IAExB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,6DAA6D,EAAED,IAAI,EAAE;MACzFE,YAAY,EAAE;KAAO,CAAC;EAC1B;EAEOC,KAAK,CAACH,IAAU;IAErB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,yDAAyD,EAAED,IAAI,EAAE;MACrFE,YAAY,EAAE;KAAQ,CAAC;EAC3B;EAEOE,MAAM;IAETC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;EAEpC;EACAC,UAAU;IAER,OAAOF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI;EAC/C;EACAC,QAAQ;IACP,OAAOJ,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACrC;EAEOE,KAAK;IAEV,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAC,kCAAkC,EAAE;MAACT,YAAY,EAAE;IAAM,CAAC,CAAC;EAClF;;AAvCWP,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAiB,SAAXjB,WAAW;EAAAkB,YAFV;AAAM","names":["HttpHeaders","AuthService","constructor","http","set","register","user","post","responseType","login","Logout","localStorage","removeItem","IsLoggedIn","getItem","GetToken","getMe","get","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\programming\\pet project\\TaskManager\\UI\\FullStack.UI\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { User } from '../models/user';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private readonly TOKEN_KEY = 'access_token';\r\n  isUserLoggedIn: boolean = false;\r\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n  currentUser = {};\r\n  router: any;\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n \r\n\r\n  public register(user: User): Observable<string> \r\n  {\r\n    return this.http.post('https://localhost:7159/api/Auth/register(regPopup:register)', user, {\r\n      responseType: 'text'});\r\n  }\r\n\r\n  public login(user: User): Observable<string> {\r\n\r\n    return this.http.post('https://localhost:7159/api/Auth/login(loginPopup:login)', user, {\r\n      responseType: 'text' });\r\n  }\r\n\r\n  public Logout()\r\n  {\r\n      localStorage.removeItem('token'); \r\n\r\n  }\r\n  IsLoggedIn() {\r\n\r\n    return localStorage.getItem('token') !== null ;   \r\n  }\r\n  GetToken(){\r\n   return localStorage.getItem('token');\r\n  }\r\n  \r\n  public getMe() : Observable<string>\r\n  {\r\n    return this.http.get('https://localhost:7159/api/Auth/', {responseType: 'text'});\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}