{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = function (a0) {\n  return {\n    show: a0\n  };\n};\nexport class LoginUserComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.showModal = false;\n    this.username = \"\";\n  }\n  ngOnInit() {\n    this.user = {\n      username: \"\",\n      password: \"\"\n    };\n    this.formData = new FormGroup({\n      username: new FormControl(\"\", Validators.required),\n      password: new FormControl(\"\", Validators.required)\n    });\n    this.showModal = true;\n  }\n  onClickSubmit(data) {\n    if (this.formData.valid) {\n      this.user.username = data.username;\n      this.user.password = data.password;\n      this.username = data.username;\n      console.log(\"Login page: \" + this.user.username);\n      console.log(\"Login page: \" + this.user.password);\n      this.authService.login(this.user).subscribe(result => {\n        console.log(\"Is Login Success: \" + result);\n        if (result != null) {\n          this.showModal = false;\n          this.responsedata = result;\n          localStorage.setItem('token', this.responsedata);\n          this.router.navigateByUrl('user-profile/' + this.user.username);\n        }\n      });\n    }\n  }\n  onClose() {\n    this.showModal = false;\n    setTimeout(() => this.router.navigate(['']), 100);\n  }\n}\nLoginUserComponent.ɵfac = function LoginUserComponent_Factory(t) {\n  return new (t || LoginUserComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginUserComponent,\n  selectors: [[\"app-login-user\"]],\n  decls: 22,\n  vars: 7,\n  consts: [[\"id\", \"loginModal\", \"tabindex\", \"-1\", 1, \"modal-backdrop\", \"fade\", 2, \"opacity\", \"1\", \"background-color\", \"rgba(99, 96, 96, 0.395)\", 3, \"ngClass\"], [1, \"modal\", \"d-block\"], [\"role\", \"document\", 1, \"modal-dialog\", 3, \"ngClass\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"loginModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"btn-close\", 3, \"click\"], [1, \"modal-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"text\", \"formControlName\", \"username\", \"id\", \"email\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"Enter email\", 1, \"form-control\"], [\"id\", \"emailHelp\", 1, \"form-text\", \"text-muted\"], [\"for\", \"password\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function LoginUserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h5\", 5);\n      i0.ɵɵtext(6, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function LoginUserComponent_Template_button_click_7_listener() {\n        return ctx.onClose();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"form\", 8);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginUserComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.onClickSubmit(ctx.formData.value);\n      });\n      i0.ɵɵelementStart(10, \"div\", 9)(11, \"label\", 10);\n      i0.ɵɵtext(12, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 11);\n      i0.ɵɵelementStart(14, \"small\", 12);\n      i0.ɵɵtext(15, \"We'll never share your email with anyone else.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 9)(17, \"label\", 13);\n      i0.ɵɵtext(18, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 15);\n      i0.ɵɵtext(21, \"Submit\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, ctx.showModal));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.showModal));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.formData);\n    }\n  },\n  dependencies: [i3.NgClass, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;;;;AAUnE,OAAM,MAAOC,kBAAkB;EAO7BC,YAAqBC,WAAwB,EAAWC,MAAe;IAAlD,gBAAW,GAAXD,WAAW;IAAwB,WAAM,GAANC,MAAM;IAL9D,cAAS,GAAG,KAAK;IAIjB,aAAQ,GAAG,EAAE;EAC6D;EAE1EC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG;MAAEC,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAC;IAAE,CAAE;IACzC,IAAI,CAACC,QAAQ,GAAG,IAAIV,SAAS,CAAC;MAC3BQ,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACU,QAAQ,CAAC;MAClDF,QAAQ,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACU,QAAQ;KACnD,CAAC;IACF,IAAI,CAACC,SAAS,GAAG,IAAI;EACxB;EAEAC,aAAa,CAACC,IAAS;IACtB,IAAI,IAAI,CAACJ,QAAQ,CAACK,KAAK,EAAC;MACtB,IAAI,CAACR,IAAI,CAACC,QAAQ,GAAGM,IAAI,CAACN,QAAQ;MAClC,IAAI,CAACD,IAAI,CAACE,QAAQ,GAAGK,IAAI,CAACL,QAAQ;MAClC,IAAI,CAACD,QAAQ,GAAGM,IAAI,CAACN,QAAQ;MAC7BQ,OAAO,CAACC,GAAG,CAAC,cAAc,GAAG,IAAI,CAACV,IAAI,CAACC,QAAQ,CAAC;MAChDQ,OAAO,CAACC,GAAG,CAAC,cAAc,GAAG,IAAI,CAACV,IAAI,CAACE,QAAQ,CAAC;MAEhD,IAAI,CAACL,WAAW,CAACc,KAAK,CAAC,IAAI,CAACX,IAAI,CAAC,CAC9BY,SAAS,CAAGC,MAAc,IAAI;QAE3BJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGG,MAAM,CAAC;QAC1C,IAAGA,MAAM,IAAE,IAAI,EAAC;UACd,IAAI,CAACR,SAAS,GAAG,KAAK;UACtB,IAAI,CAACS,YAAY,GAACD,MAAM;UACxBE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,IAAI,CAACF,YAAY,CAAC;UAChD,IAAI,CAAChB,MAAM,CAACmB,aAAa,CAAC,eAAe,GAAG,IAAI,CAACjB,IAAI,CAACC,QAAQ,CAAC;;MAGnE,CAAC,CACF;;EAIL;EAEAiB,OAAO;IACL,IAAI,CAACb,SAAS,GAAG,KAAK;IACtBc,UAAU,CACR,MAAM,IAAI,CAACrB,MAAM,CAACsB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAChC,GAAG,CACJ;EACH;;AAlDWzB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT/BC,8BAAqK;MAKhHA,qBAAK;MAAAA,iBAAK;MACvDA,iCAAgF;MAApBA;QAAA,OAASC,aAAS;MAAA,EAAC;MAACD,iBAAS;MAE3FA,8BAAwB;MACSA;QAAA,OAAYC,qCAA6B;MAAA,EAAC;MACvED,+BAAwB;MACHA,8BAAa;MAAAA,iBAAQ;MACxCA,6BAAqI;MACrIA,kCAAmD;MAAAA,+DAA8C;MAAAA,iBAAQ;MAE3GA,+BAAwB;MACAA,yBAAQ;MAAAA,iBAAQ;MACtCA,6BAA4G;MAC9GA,iBAAM;MACNA,mCAA8C;MAAAA,uBAAM;MAAAA,iBAAS;;;MAnB8BA,mEAA+B;MAEtFA,eAA+B;MAA/BA,mEAA+B;MAO/DA,eAAwB;MAAxBA,wCAAwB","names":["FormControl","FormGroup","Validators","LoginUserComponent","constructor","authService","router","ngOnInit","user","username","password","formData","required","showModal","onClickSubmit","data","valid","console","log","login","subscribe","result","responsedata","localStorage","setItem","navigateByUrl","onClose","setTimeout","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\programming\\pet project\\TaskManager\\UI\\FullStack.UI\\src\\app\\components\\authorization\\login-user\\login-user.component.ts","C:\\Users\\User\\Desktop\\programming\\pet project\\TaskManager\\UI\\FullStack.UI\\src\\app\\components\\authorization\\login-user\\login-user.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/models/user';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login-user',\r\n  templateUrl: './login-user.component.html',\r\n  styleUrls: ['./login-user.component.css']\r\n})\r\nexport class LoginUserComponent implements OnInit\r\n{\r\n  showModal = false;\r\n  user!: User;\r\n  formData!: FormGroup;\r\n  responsedata: any;\r\n  username = \"\";\r\n  constructor (private authService: AuthService,  private router : Router) {}\r\n  \r\n  ngOnInit() {\r\n    this.user = { username: \"\", password:\"\" };\r\n    this.formData = new FormGroup({\r\n       username: new FormControl(\"\", Validators.required),\r\n       password: new FormControl(\"\", Validators.required),\r\n    });\r\n    this.showModal = true;\r\n }\r\n\r\n onClickSubmit(data: any) {\r\n  if (this.formData.valid){\r\n    this.user.username = data.username;\r\n    this.user.password = data.password;\r\n    this.username = data.username;\r\n    console.log(\"Login page: \" + this.user.username);\r\n    console.log(\"Login page: \" + this.user.password);\r\n    \r\n    this.authService.login(this.user)\r\n      .subscribe( (result: string) => \r\n        { \r\n          console.log(\"Is Login Success: \" + result); \r\n          if(result!=null){\r\n            this.showModal = false;\r\n            this.responsedata=result;\r\n            localStorage.setItem('token', this.responsedata);\r\n            this.router.navigateByUrl('user-profile/' + this.user.username);\r\n            \r\n          }    \r\n        }\r\n      );\r\n  }\r\n    \r\n\r\n  }\r\n\r\n  onClose(){\r\n    this.showModal = false;\r\n    setTimeout(\r\n      () => this.router.navigate(['']),\r\n      100\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","\r\n\r\n<div class=\"modal-backdrop fade \"  style = \"opacity: 1; background-color: rgba(99, 96, 96, 0.395); \" [ngClass]=\"{ show: showModal }\" id=\"loginModal\" tabindex=\"-1\"  >\r\n  <div class=\"modal d-block \" >\r\n  <div class=\"modal-dialog \"  role=\"document\" [ngClass]=\"{ show: showModal }\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"loginModalLabel\">Login</h5>\r\n        <button type=\"button\" class=\"btn-close\"  aria-label=\"Close\" (click)=\"onClose()\"></button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form [formGroup] = \"formData\" (ngSubmit)=\"onClickSubmit(formData.value)\">\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">Email address</label>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"username\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\r\n            <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Password</label>\r\n            <input formControlName=\"password\" type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Password\">\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}