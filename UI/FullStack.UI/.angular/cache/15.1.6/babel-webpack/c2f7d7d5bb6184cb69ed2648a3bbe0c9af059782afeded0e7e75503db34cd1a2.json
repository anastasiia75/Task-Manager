{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"src/app/services/auth.service\";\nimport * as i4 from \"@angular/forms\";\nexport class CreateTaskComponent {\n  constructor(route, userService, router, authService) {\n    this.route = route;\n    this.userService = userService;\n    this.router = router;\n    this.authService = authService;\n    this.task = {\n      id: '00000000-0000-0000-0000-000000000000',\n      name: '',\n      description: '',\n      dateOfCreation: new Date(),\n      isDone: false,\n      deadline: undefined\n    };\n    this.username = \"\";\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe({\n      next: params => {\n        this.name = params.get('id');\n      }\n    });\n  }\n  createTask() {\n    this.authService.getMe().subscribe(data => {\n      this.username = data;\n    });\n    this.userService.createTask(this.task, this.name).subscribe({\n      next: task => {\n        this.router.navigateByUrl('user-profile/' + this.username + '/tasks');\n      }\n    });\n  }\n}\nCreateTaskComponent.ɵfac = function CreateTaskComponent_Factory(t) {\n  return new (t || CreateTaskComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n};\nCreateTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateTaskComponent,\n  selectors: [[\"app-create-task\"]],\n  decls: 23,\n  vars: 3,\n  consts: [[1, \"container\", \"my-5\"], [1, \"mb-3\"], [1, \"row\"], [1, \"col-6\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"salary\", 1, \"form-label\"], [\"type\", \"datetime-local\", \"id\", \"salary\", \"name\", \"salary\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mr-5\"]],\n  template: function CreateTaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"create-task works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"h1\", 1);\n      i0.ɵɵtext(4, \"Edit Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 3)(7, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateTaskComponent_Template_form_ngSubmit_7_listener() {\n        return ctx.createTask();\n      });\n      i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateTaskComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.task.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 1)(14, \"label\", 8);\n      i0.ɵɵtext(15, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateTaskComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.task.description = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 1)(18, \"label\", 10);\n      i0.ɵɵtext(19, \"Deadline\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateTaskComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.task.deadline = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"button\", 12);\n      i0.ɵɵtext(22, \"Save\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngModel\", ctx.task.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.task.description);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.task.deadline);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;AAWA,OAAM,MAAOA,mBAAmB;EAY9BC,YAAoBC,KAAqB,EAAUC,WAAwB,EACjEC,MAAc,EAAUC,WAAwB;IADtC,UAAK,GAALH,KAAK;IAA0B,gBAAW,GAAXC,WAAW;IACpD,WAAM,GAANC,MAAM;IAAkB,gBAAW,GAAXC,WAAW;IAZ7C,SAAI,GAAS;MACXC,EAAE,EAAE,sCAAsC;MAC1CC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,cAAc,EAAE,IAAIC,IAAI,EAAE;MAC1BC,MAAM,EAAE,KAAK;MACbC,QAAQ,EAAEC;KACX;IACD,aAAQ,GAAG,EAAE;EAI+C;EAC5DC,QAAQ;IAEN,IAAI,CAACZ,KAAK,CAACa,QAAQ,CAACC,SAAS,CAAC;MAC5BC,IAAI,EAAGC,MAAM,IAAI;QACf,IAAI,CAACX,IAAI,GAAGW,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC;MAAG;KAChC,CAAC;EACJ;EACFC,UAAU;IAER,IAAI,CAACf,WAAW,CAACgB,KAAK,EAAE,CACpBL,SAAS,CAACM,IAAI,IAAG;MAChB,IAAI,CAACC,QAAQ,GAAGD,IAAI;IACtB,CAAC,CAAC;IACL,IAAI,CAACnB,WAAW,CAACiB,UAAU,CAAC,IAAI,CAACI,IAAI,EAAE,IAAI,CAACjB,IAAI,CAAC,CAACS,SAAS,CAAC;MAC1DC,IAAI,EAAGO,IAAI,IAAI;QACb,IAAI,CAACpB,MAAM,CAACqB,aAAa,CAAC,eAAe,GAAE,IAAI,CAACF,QAAQ,GAAC,QAAQ,CAAC;MACpE;KACD,CAAC;EACJ;;AAhCWvB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXhCC,yBAAG;MAAAA,kCAAkB;MAAAA,iBAAI;MACzBA,8BAA4B;MACLA,yBAAS;MAAAA,iBAAK;MACjCA,8BAAiB;MAEcA;QAAA,OAAYC,gBAAY;MAAA,EAAC;MAE5CD,8BAAkB;MACuBA,qBAAI;MAAAA,iBAAQ;MACjDA,iCACwC;MAA1BA;QAAA;MAAA,EAAyB;MADvCA,iBACwC;MAE5CA,+BAAkB;MACwBA,4BAAW;MAAAA,iBAAQ;MACzDA,iCAC+C;MAAjCA;QAAA;MAAA,EAAgC;MAD9CA,iBAC+C;MAGnDA,+BAAkB;MACyBA,yBAAQ;MAAAA,iBAAQ;MACvDA,kCAC4C;MAA9BA;QAAA;MAAA,EAA6B;MAD3CA,iBAC4C;MAGhDA,mCAAmD;MAAAA,qBAAI;MAAAA,iBAAS;;;MAd9CA,gBAAyB;MAAzBA,uCAAyB;MAKzBA,eAAgC;MAAhCA,8CAAgC;MAMhCA,eAA6B;MAA7BA,2CAA6B","names":["CreateTaskComponent","constructor","route","userService","router","authService","id","name","description","dateOfCreation","Date","isDone","deadline","undefined","ngOnInit","paramMap","subscribe","next","params","get","createTask","getMe","data","username","task","navigateByUrl","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\programming\\pet project\\TaskManager\\UI\\FullStack.UI\\src\\app\\components\\tasks\\create-task\\create-task.component.ts","C:\\Users\\User\\Desktop\\programming\\pet project\\TaskManager\\UI\\FullStack.UI\\src\\app\\components\\tasks\\create-task\\create-task.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Task } from 'src/app/models/task';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-create-task',\r\n  templateUrl: './create-task.component.html',\r\n  styleUrls: ['./create-task.component.css']\r\n})\r\nexport class CreateTaskComponent implements OnInit{\r\n  task: Task = {\r\n    id: '00000000-0000-0000-0000-000000000000',\r\n    name: '',\r\n    description: '',\r\n    dateOfCreation: new Date(),\r\n    isDone: false,\r\n    deadline: undefined\r\n  };\r\n  username = \"\";\r\n  \r\n  name!: string | null;\r\n  constructor(private route: ActivatedRoute, private userService: UserService,\r\n    private router: Router, private authService: AuthService){}\r\n  ngOnInit(): void {\r\n\r\n    this.route.paramMap.subscribe({\r\n      next: (params) => {\r\n        this.name = params.get('id');  }\r\n      });\r\n    }\r\n  createTask()\r\n  {\r\n    this.authService.getMe().\r\n        subscribe(data => {\r\n         this.username = data;\r\n       });\r\n    this.userService.createTask(this.task, this.name).subscribe({\r\n      next: (task) => {\r\n        this.router.navigateByUrl('user-profile/'+ this.username+'/tasks');\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<p>create-task works!</p>\r\n<div class=\"container my-5\">\r\n    <h1 class = \"mb-3\">Edit Task</h1>\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">\r\n            <form #form = \"ngForm\" (ngSubmit)=\"createTask()\">\r\n                \r\n                <div class=\"mb-3\">\r\n                    <label for=\"name\" class=\"form-label\">Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"name\" \r\n                    name = \"name\" [(ngModel)] = \"task.name\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"email\" class=\"form-label\">Description</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"email\" \r\n                    name =\"email\" [(ngModel)] = \"task.description\">\r\n                </div>\r\n                \r\n                <div class=\"mb-3\">\r\n                    <label for=\"salary\" class=\"form-label\">Deadline</label>\r\n                    <input type=\"datetime-local\" class=\"form-control\" id=\"salary\" \r\n                    name=\"salary\" [(ngModel)] = \"task.deadline\">\r\n                </div>\r\n                \r\n                <button type=\"submit\" class=\"btn btn-primary mr-5\">Save</button>\r\n               \r\n\r\n            </form>\r\n        </div>\r\n    </div>\r\n    \r\n</div>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}